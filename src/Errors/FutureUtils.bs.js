// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Future = require("reason-future/src/Future.bs.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");

function fromOptional(optional) {
  return Belt_Option.mapWithDefault(optional, Future.make(undefined, (function (r) {
                    return Curry._1(r, {
                                TAG: 1,
                                _0: [
                                  400,
                                  ""
                                ],
                                [Symbol.for("name")]: "Error"
                              });
                  })), (function (value) {
                return Future.make(undefined, (function (r) {
                              return Curry._1(r, {
                                          TAG: 0,
                                          _0: value,
                                          [Symbol.for("name")]: "Ok"
                                        });
                            }));
              }));
}

function fromNullable(nullable) {
  return fromOptional((nullable == null) ? undefined : Caml_option.some(nullable));
}

function toError(data) {
  return Future.make(undefined, (function (r) {
                return Curry._1(r, {
                            TAG: 1,
                            _0: data,
                            [Symbol.for("name")]: "Error"
                          });
              }));
}

exports.fromOptional = fromOptional;
exports.fromNullable = fromNullable;
exports.toError = toError;
/* No side effect */
